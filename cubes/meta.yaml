package:
  name: cubes
  version: !!str 1.0

source:
  fn: cubes-1.0.tar.gz
  url: https://pypi.python.org/packages/source/c/cubes/cubes-1.0.tar.gz
  md5: b13e0643027d68ea03e6316a338f53c4
#  patches:
   # List any patch files here
   # - fix.patch

build:
  # preserve_egg_dir: True
  entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - cubes = cubes:main
    #
    # Would create an entry point called cubes that calls cubes.main()

    - slicer = cubes.slicer.commands:main

  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - pytz
    - python-dateutil
    - jsonschema
    - pymongo
    - sqlalchemy
    - flask

  run:
    - python
    - pytz
    - python-dateutil
    - jsonschema
    - pymongo
    - sqlalchemy
    - flask

test:
  # Python imports
  imports:
    - cubes
    - cubes.backends
    - cubes.backends.ga
    - cubes.backends.mixpanel
    - cubes.backends.mongo
    - cubes.backends.slicer
    - cubes.backends.sql
    - cubes.server
    - cubes.slicer
    - cubes.tutorial

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.

    - slicer --help

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: http://cubes.databrewery.org
  license: MIT License
  summary: 'Lightweight framework for Online Analytical Processing (OLAP) and multidimensional analysis'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
